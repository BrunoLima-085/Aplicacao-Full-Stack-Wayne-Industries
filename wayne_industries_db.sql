CREATE DATABASE IF NOT EXISTS wayne_security_db CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE wayne_security_db;

CREATE TABLE IF NOT EXISTS roles (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL UNIQUE,
  description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(80) NOT NULL UNIQUE,
  full_name VARCHAR(200),
  email VARCHAR(200) UNIQUE,
  password_hash VARCHAR(255) NOT NULL,
  role_id INT NOT NULL,
  active BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS areas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  code VARCHAR(50) UNIQUE,
  name VARCHAR(200),
  description TEXT,
  restricted BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS role_area_permissions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  role_id INT NOT NULL,
  area_id INT NOT NULL,
  can_enter BOOLEAN DEFAULT FALSE,
  can_exit BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE KEY(role_id, area_id),
  FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE,
  FOREIGN KEY (area_id) REFERENCES areas(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS access_logs (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  area_id INT,
  action ENUM('REQUEST','GRANTED','DENIED','ENTER','EXIT') NOT NULL,
  timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
  note TEXT,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL,
  FOREIGN KEY (area_id) REFERENCES areas(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS resource_types (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) UNIQUE,
  description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS resources (
  id INT AUTO_INCREMENT PRIMARY KEY,
  type_id INT,
  identifier VARCHAR(150) UNIQUE, -- tag, plate, serial
  name VARCHAR(200),
  description TEXT,
  status ENUM('AVAILABLE','IN_USE','MAINTENANCE','DECOMMISSIONED') DEFAULT 'AVAILABLE',
  location VARCHAR(200),
  last_checked DATETIME,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (type_id) REFERENCES resource_types(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS resource_assignments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  resource_id INT NOT NULL,
  user_id INT,
  assigned_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  due_back DATETIME,
  returned_at DATETIME,
  note TEXT,
  FOREIGN KEY (resource_id) REFERENCES resources(id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS devices (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(200),
  device_type VARCHAR(100),
  ip_address VARCHAR(100),
  location VARCHAR(200),
  status ENUM('ONLINE','OFFLINE','MAINTENANCE') DEFAULT 'ONLINE',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
